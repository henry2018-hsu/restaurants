[{"/home/lin/web422-a3/src/index.js":"1","/home/lin/web422-a3/src/App.js":"2","/home/lin/web422-a3/src/reportWebVitals.js":"3","/home/lin/web422-a3/src/Restaurants.js":"4","/home/lin/web422-a3/src/Restaurant.js":"5","/home/lin/web422-a3/src/About.js":"6","/home/lin/web422-a3/src/NotFound.js":"7"},{"size":1158,"mtime":1612836773000,"results":"8","hashOfConfig":"9"},{"size":2499,"mtime":1619752475662,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612190356000,"results":"11","hashOfConfig":"9"},{"size":4088,"mtime":1619753861413,"results":"12","hashOfConfig":"9"},{"size":3060,"mtime":1612836367000,"results":"13","hashOfConfig":"9"},{"size":398,"mtime":1612815962000,"results":"14","hashOfConfig":"9"},{"size":190,"mtime":1612795011000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1nxalth",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lin/web422-a3/src/index.js",[],["32","33"],"/home/lin/web422-a3/src/App.js",[],"/home/lin/web422-a3/src/reportWebVitals.js",[],"/home/lin/web422-a3/src/Restaurants.js",["34"],"import {useState, useEffect} from 'react'; \nimport { Redirect, useHistory } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport Pagination from 'react-bootstrap/Pagination';\n\n\nfunction Restaurants(props){\n    const [loading, setLoading] = useState(true);\n    const [restaurants, setRestaurants] = useState([null]);\n    const [page, setPage] = useState([1]);\n    const [found, setFound] = useState(false);\n\n    const perPage = 10;\n\n    let history = useHistory();\n    \n    let query = queryString.parse(props.query);\n    let borough = query.borough;\n\n    let url;\n    \n    if(borough) {\n        url = `http://calm-journey-61101.herokuapp.com/api/restaurants?page=${page}&perPage=${perPage}&borough=${borough}`;\n    }   \n    else {\n        url = `http://calm-journey-61101.herokuapp.com/api/restaurants?page=${page}&perPage=${perPage}`;\n    }\n    useEffect(()=>{        \n        fetch(url)\n        .then(res=>res.json())\n        .then(result => {\n            if(result){  \n                setRestaurants(result);\n                setFound(true);  \n                setLoading(false);  \n            }else{\n                setRestaurants(null);\n                setFound(true); \n                setLoading(false);  \n            }\n        })\n    }, [page, borough, url]); \n    \n\n    if(loading){\n        return \"Loading Restaurants...\";\n    }else{       \n        if(found){\n            console.log(JSON.stringify(restaurants));\n            if(restaurants === undefined || restaurants.length == 0)    \n                return (\n                    <div>\n                        <h3>No Restaurants Found</h3>\n                    </div>);\n        return (            \n            <div>\n                <Card.Title>Restaurant List</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">Full list of restaurants. Optionally sorted by borough </Card.Subtitle>\n                <br />\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Address</th>\n                            <th>Borough</th>\n                            <th>Cuisine</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>                       \n                        {restaurants.map((restaurant, index)=>{\n                            const restaurantList = (\n                                                    <tr key={index} onClick={()=> {\n                                                        console.log(`/restaurant/${restaurant._id}`);\n                                                        history.push(`/restaurant/${restaurant._id}`);\n                                                    }}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{restaurant.name}</td>\n                                                        <td>{restaurant.address.building} {restaurant.address.street}</td>\n                                                        <td>{restaurant.borough}</td>\n                                                        <td>{restaurant.cuisine}</td>\n                                                    </tr> );\n                            return restaurantList})} \n                    </tbody>\n                </Table>\n                \n                <Pagination>\n                    <Pagination.Prev  onClick={previousPage}/>\n                    <Pagination.Item><strong>{page}</strong></Pagination.Item>\n                    <Pagination.Next  onClick={nextPage}/>\n                </Pagination>\n            </div>            \n        );\n        }else{\n            return <Redirect to={{ pathname: \"/notFound\"}} />\n        }\n    }\n    function previousPage() {\n        if(+page > 1)    setPage(+page - 1);\n    }\n    function nextPage() {\n        setPage(+page + 1);\n    }\n}\nexport default Restaurants;","/home/lin/web422-a3/src/Restaurant.js",[],"/home/lin/web422-a3/src/About.js",[],"/home/lin/web422-a3/src/NotFound.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":52,"column":64,"nodeType":"41","messageId":"42","endLine":52,"endColumn":66},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]